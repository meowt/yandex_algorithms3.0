package main

import "fmt"

//23. Калькулятор
//Ограничение времени	2 секунды
//Ограничение памяти	256Mb
//Ввод	стандартный ввод или input.txt
//Вывод	стандартный вывод или output.txt
//Имеется калькулятор, который выполняет следующие операции:
//
//умножить число X на 2;
//умножить число X на 3;
//прибавить к числу X единицу.
//Определите, какое наименьшее количество операций требуется, чтобы получить из числа 1 число N.
//
//Формат ввода
//Во входном файле написано натуральное число N, не превосходящее 106.
//
//Формат вывода
//В первой строке выходного файла выведите минимальное количество операций. Во второй строке выведите числа, последовательно получающиеся при выполнении операций. Первое из них должно быть равно 1, а последнее N. Если решений несколько, выведите любое.

var cache = [1000001]int{0, 0, 1, 1}
var prev = [1000001]int{0, 0, 1, 1}

func main() {
	var n int
	fmt.Scan(&n)
	fmt.Println(f(n))
	for n > 0 {
		defer fmt.Print(n, " ")
		n = prev[n]
	}
}

func f(n int) (res int) {
	if cache[n] != 0 || n == 1 {
		return cache[n]
	}
	first, second, third := 1000000, 1000000, 1000000
	if n%3 == 0 {
		third = f(n / 3)
	}
	if n%2 == 0 {
		second = f(n / 2)
	}
	first = f(n - 1)
	if third <= second && third <= first {
		cache[n] = third + 1
		prev[n] = n / 3
		return third + 1
	}
	if second <= third && second <= first {
		prev[n] = n / 2
		cache[n] = second + 1
		return second + 1
	}
	prev[n] = n - 1
	cache[n] = first + 1
	return first + 1
}
